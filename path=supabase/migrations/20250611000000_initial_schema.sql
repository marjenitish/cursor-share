-- Create trigger function for updated_at
CREATE OR REPLACE FUNCTION trigger_set_timestamp()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Create venue_status enum
CREATE TYPE venue_status AS ENUM ('active', 'inactive');

-- Create venues table
CREATE TABLE venues (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL,
    street_address TEXT NOT NULL,
    city TEXT NOT NULL,
    status venue_status DEFAULT 'active' NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Create trigger for venues
CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON venues
    FOR EACH ROW
    EXECUTE FUNCTION trigger_set_timestamp();

-- Create terms table
CREATE TABLE terms (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    fiscal_year INTEGER NOT NULL,
    term_number INTEGER NOT NULL CHECK (term_number BETWEEN 1 AND 4),
    day_of_week TEXT NOT NULL CHECK (day_of_week IN ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday')),
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    number_of_weeks INTEGER NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    UNIQUE(fiscal_year, term_number, day_of_week)
);

-- Create trigger for terms
CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON terms
    FOR EACH ROW
    EXECUTE FUNCTION trigger_set_timestamp();

-- Create instructors table
CREATE TABLE instructors (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL,
    contact_no TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Create trigger for instructors
CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON instructors
    FOR EACH ROW
    EXECUTE FUNCTION trigger_set_timestamp();

-- Create exercise_types table
CREATE TABLE exercise_types (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Create trigger for exercise_types
CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON exercise_types
    FOR EACH ROW
    EXECUTE FUNCTION trigger_set_timestamp();

-- Create sessions table with venue_id reference
CREATE TABLE sessions (
    id uuid DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL,
    code TEXT NOT NULL,
    venue_id uuid NOT NULL REFERENCES venues(id),
    instructor_id uuid NOT NULL REFERENCES instructors(id),
    fee_criteria TEXT NOT NULL,
    term TEXT NOT NULL,
    fee_amount NUMERIC(10, 2) NOT NULL DEFAULT 0.00,
    exercise_type_id uuid REFERENCES exercise_types(id),
    term_id BIGINT REFERENCES terms(id),
    zip_code TEXT,
    day_of_week TEXT NOT NULL CHECK (day_of_week IN ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday')),
    start_time TIME WITHOUT TIME ZONE NOT NULL,
    end_time TIME WITHOUT TIME ZONE,
    is_subsidised BOOLEAN DEFAULT false,
    class_capacity BIGINT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Create trigger for sessions
CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON sessions
    FOR EACH ROW
    EXECUTE FUNCTION trigger_set_timestamp();

-- Create indexes for common queries
CREATE INDEX idx_sessions_term_id ON sessions(term_id);
CREATE INDEX idx_sessions_instructor_id ON sessions(instructor_id);
CREATE INDEX idx_sessions_exercise_type_id ON sessions(exercise_type_id);
CREATE INDEX idx_sessions_venue_id ON sessions(venue_id);

-- Insert sample venues data
INSERT INTO venues (name, street_address, city, status)
VALUES
    ('Burwood Woodstock Community', '10 Woodstock Ave', 'Sydney', 'active'),
    ('Penshurst RAIN', '22 Railway Parade', 'Sydney', 'active'),
    ('Older Women''s Network Newtown', '35 King Street', 'Sydney', 'active'),
    ('Hannaford Community Rozelle', '12 Darling Street', 'Sydney', 'active'),
    ('Oatley RSL Hall', '25 Letitia Street', 'Sydney', 'active'),
    ('The Rocks KGV Recreation Centre', '38 George Street', 'Sydney', 'active'),
    ('Mortdale RSL', '15 Oxford Street', 'Sydney', 'active'),
    ('STG Hospital Hydro Pool', '121 Princes Highway', 'Sydney', 'active'),
    ('Earlwood Senior Citizen Centre', '77 Homer Street', 'Sydney', 'active'),
    ('St John''s Ashfield', '5 Alt Street', 'Sydney', 'active'); 